{"version":3,"sources":["web/js/recordingsView.js"],"names":["exports","render","archives","bubble","document","querySelector","data","Object","keys","length","list","innerHTML","total","sort","a","b","tA","createdAt","forEach","archiveId","archive","url","localDownloadURL","item","HTMLElems","createElementAt","status","target","href","Utils","getLabelText","classList","add","data-id","id","data-icon","data-action","data-username","recordingUser","download","name","RoomView","recordingsNumber","this","RecordingsView","init","model","body","isChrome","addEventListener","addHandlerArchive"],"mappings":"AAEC,CAACA,IAKA,SAASC,EAAOC,GACd,IAAKA,EACH,OAGF,MAAMC,EAASC,SAASC,cAAc,0BACtC,IAAKF,EACH,OAEFA,EAAOG,KAAK,aAAcC,OAAOC,KAAKN,GAAUO,QAEhD,MAAMC,EAAOP,EAAOE,cAfA,sBAiBpBK,EAAKC,UAAY,GASjB,IAAIC,EAAQ,EACZL,OAAOC,KAAKN,GACTW,KATuB,CAACC,EAAGC,KAC5B,MAAMC,EAAKd,EAASY,GAAGG,UAGvB,OAFWf,EAASa,GAAGE,UAEXD,IAMXE,QAAQC,IACP,MAAMC,EAAUlB,EAASiB,KACvBP,EACF,MAAMS,EAAMD,EAAQE,iBACdC,EAAOC,UAAUC,gBAAgBf,EAAM,MAE7Ca,EAAKjB,KAAK,SAAUc,EAAQM,QAE5BF,UAAUC,gBAAgBF,EAAM,IAAK,CACnCI,OAAQ,SACRC,KAASP,EAAH,oBACLQ,MAAMC,aAAaV,IAAUW,UAAUC,IAAI,QAE9CR,UAAUC,gBAAgBF,EAAM,IAAK,CACnCU,UAAWb,EAAQc,GACnBC,YAAa,SACbC,cAAe,SACfC,gBAAiBjB,EAAQkB,gBAG3Bd,UAAUC,gBAAgBF,EAAM,IAAK,CACnCY,YAAa,WACbP,KAAMP,EACNkB,SAAanB,EAAQoB,KAAX,SACTT,UAAUC,IAAI,cAGrBS,SAASC,iBAAmB9B,EAiB7B+B,KAHOC,eAAiB,CACvBC,KARWC,IACX1C,SAAS2C,KAAKzC,KAAK,oBAAqBuB,MAAMmB,YAC9CF,EAAMG,iBAAiB,QAAShD,GAChCA,EAAO6C,EAAM5C,UANbsB,UAAU0B,kBA5DU,yBADvB","sourcesContent":["/* global RoomView */\n\n!(exports => {\n  const LIST_SELECTOR = '.videos.tc-list ul';\n\n  const VIDEO_EXTENSION = 'mp4';\n\n  function render(archives) {\n    if (!archives) {\n      return;\n    }\n\n    const bubble = document.querySelector('[for=\"viewRecordings\"]');\n    if (!bubble) {\n      return;\n    }\n    bubble.data('recordings', Object.keys(archives).length);\n\n    const list = bubble.querySelector(LIST_SELECTOR);\n\n    list.innerHTML = '';\n\n    const sortingDescending = (a, b) => {\n      const tA = archives[a].createdAt;\n      const tB = archives[b].createdAt;\n\n      return tB - tA;\n    };\n\n    let total = 0;\n    Object.keys(archives)\n      .sort(sortingDescending)\n      .forEach(archiveId => {\n        const archive = archives[archiveId];\n        ++total;\n        const url = archive.localDownloadURL;\n        const item = HTMLElems.createElementAt(list, 'li');\n\n        item.data('status', archive.status);\n\n        HTMLElems.createElementAt(item, 'a', {\n          target: '_blank',\n          href: `${url}?generatePreview`\n        }, Utils.getLabelText(archive)).classList.add('file');\n\n        HTMLElems.createElementAt(item, 'i', {\n          'data-id': archive.id,\n          'data-icon': 'delete',\n          'data-action': 'delete',\n          'data-username': archive.recordingUser\n        });\n\n        HTMLElems.createElementAt(item, 'a', {\n          'data-icon': 'download',\n          href: url,\n          download: `${archive.name}.${VIDEO_EXTENSION}`\n        }).classList.add('download');\n      });\n\n    RoomView.recordingsNumber = total;\n  }\n\n  const addHandlers = () => {\n    HTMLElems.addHandlerArchive(LIST_SELECTOR);\n  };\n\n  const init = model => {\n    document.body.data('downloadAvailable', Utils.isChrome());\n    model.addEventListener('value', render);\n    render(model.archives);\n    addHandlers();\n  };\n\n  exports.RecordingsView = {\n    init\n  };\n})(this);\n"]}