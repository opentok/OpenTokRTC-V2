(e=>{const t=new Utils.MultiLevelLogger("roomController.js",Utils.MultiLevelLogger.DEFAULT_LEVELS.all);let o,n,i=0,s=!1,r=!0,a=!1,l=!1,d=!1,u=!1,c=null;const m=new Promise(e=>{n=e});let h={roomMuted:!1},p=window.userName,b=null,g=null,v=null,w=null;const f={insertMode:"append",width:"100%",height:"100%",showControls:!0,resolution:publisherResolution,style:{audioLevelDisplayMode:"auto",buttonDisplayMode:"off",nameDisplayMode:"off",videoDisabledDisplayMode:"on",showArchiveStatus:!1}},y={camera:{height:"100%",width:"100%",inserMode:"append",showControls:!0,style:{audioLevelDisplayMode:"auto",buttonDisplayMode:"off",nameDisplayMode:"off",videoDisabledDisplayMode:"auto",showArchiveStatus:!1}},screen:{height:"100%",width:"100%",inserMode:"append",showControls:!1,style:{audioLevelDisplayMode:"off",buttonDisplayMode:"off",nameDisplayMode:"on",videoDisabledDisplayMode:"off"}},noVideo:{height:"100%",width:"100%",inserMode:"append",showControls:!0,style:{audioLevelDisplayMode:"auto",buttonDisplayMode:"off",nameDisplayMode:"on",videoDisabledDisplayMode:"off"}}},C=(e,t)=>{const o="screen"===e,n={};return t||(n.video={eventFiredName:"roomView:buttonClick",dataIcon:o?"desktop":"video",eventName:"click",context:"otHelper",action:"toggleSubscribersVideo",enabled:!0}),o||(n.audio={eventFiredName:"roomView:buttonClick",dataIcon:"audio",eventName:"click",context:"otHelper",action:"toggleSubscribersAudio",enabled:!0}),t&&t in S&&(n.hangup={eventFiredName:"roomView:buttonClick",dataIcon:"hangup",eventName:"click",context:"otHelper",action:"hangup",enabled:!0}),n},E={video:{eventFiredName:"roomView:buttonClick",dataIcon:"video",eventName:"click",context:"otHelper",action:"togglePublisherVideo",enabled:!0},audio:{eventFiredName:"roomView:buttonClick",dataIcon:"mic",eventName:"click",context:"otHelper",action:"togglePublisherAudio",enabled:!0}};let R={};var S={};const V=e=>{const t=e.target;if("style"!==e.attributeName&&"class"!==e.attributeName||"camera"!==t.data("streamType"))return;const n=t.data("id");(R[n]&&R[n].subscriberPromise).then(e=>{v&&(window.subscriberElem=window.subscriberElem||{},window.subscriberElem[n]=t,window.subscriber=window.subscriber||{},window.subscriber[n]=e,window.dumpResolutionInfo=window.dumpResolutionInfo||(()=>{Object.keys(window.subscriber).forEach(e=>{const t=window.subscriber[e],o=t&&t.stream,n=o&&o.videoDimensions,i=o&&o.getPreferredResolution()||{width:"NA",height:"NA"};o&&console.log("StreamId:",e,"Real:",t.videoWidth(),"x",t.videoHeight(),"Stream.getPreferredResolution:",i.width,"x",i.height,"Stream.VDimension:",n.width,"x",n.height)})}));const s=t.parentNode,r={width:s.clientWidth,height:s.clientHeight},a={width:t.clientWidth,height:t.clientHeight};o.setPreferredResolution(e,r,a,i-1,g)})},j=(e.MutationObserver&&new e.MutationObserver(e=>{e.forEach(V)}),e=>{e&&Utils.sendEvent("roomController:"+(e.hasVideo?"videoEnabled":"videoDisabled"),{id:e.streamId})}),I=e=>{const t={userName:p,roomName:b,operation:e};Request.sendArchivingOperation(t)},M=e=>{if(Object.keys(R).some(t=>{if(R[t]){const o=R[t].stream;return o.isSip&&o.name===e}return!1}))console.log("The number is already in this call: "+e);else{let t;if(u){t=c.currentUser.get().getAuthResponse().id_token}else t="";const o={phoneNumber:e,googleIdToken:t};Request.dialOut(b,o),S[e]=t}},k={updatedRemotely(){m.then(()=>{h=RoomStatus.get("room");const e=h.roomMuted;N(e),e&&Utils.sendEvent("roomController:roomMuted",{isJoining:!0})})}};var U=(e,t,o)=>{P.buttonClick({detail:{streamId:e,name:t,disableAll:!0,status:o}})};function A(e,t){o.sendSignal("muteAll",{status:e,onlyChangeSwitch:t})}var P={endCall(){o.disconnect();const e=window.location.origin.concat("/thanks");window.location.href=e},startArchiving(e){I(e.detail&&e.detail.operation||"startComposite")},stopArchiving(){I("stop")},streamVisibilityChange(e){const t=e.detail.id;if("publisher"!==t){const n=R[t];n&&o.toggleSubscribersVideo(n.stream,(t=>{let o=null;return"hidden"===e.detail.value?(t.prevEnabled="prevEnabled"in t?t.prevEnabled:t.enabled,o=!1):(o="prevEnabled"in t?t.prevEnabled:t.enabled,delete t.prevEnabled),o})(n.buttons.video))}},buttonClick(n){const i=n.detail.streamId,s=n.detail.streamType,r=n.detail.name,a=!!n.detail.disableAll,l=n.detail.status;let d=null;const u=[];let c;const m="publisher"===i;if(m){if(d=E[r],c=!d.enabled,!o.isPublisherReady||o.publisherHas(r)===c)return}else{const e=R[i];if(!e)return void t.error("Got an event from an nonexistent stream");if("hangup"===r)return void(e=>{if(!R[e])return;const t=R[e].stream;if(!t.isSip)return;const o=t.phoneNumber;if(!(o in S))return;const n=S[o];Request.hangUp(o,n),delete S[o]})(i);d=e.buttons[r],u.push(e.stream),c=!d.enabled,"screen"!==s&&"audio"!==r||D({stream:e.stream},r,c)}if(d){if(u.push(c),!a||a&&l!==c){if(e[d.context][d.action](...u),!a&&"screen"!==s){const e="audio"===r&&m,t="video"===r&&!m;(e||t)&&(Utils.sendEvent("roomController:userChangeStatus",{status:c,name:r}),e&&(A(!1,!0),h.roomMuted=!1))}}}else t.error("Got an event from an unknown button!")},videoSwitch(e){var t,o;t="video",o=e.detail.status,s=o,Object.keys(R).forEach(e=>{R[e]&&"camera"===R[e].stream.videoType&&U(e,t,o)})},muteAllSwitch(e){const t=e.detail.status;h.roomMuted=t,N(t),A(t,!1)},dialOut(e){if(e.detail){const t=e.detail.replace(/\D/g,"");u&&!0!==c.isSignedIn.get()?c.signIn().then(()=>{document.body.data("google-signed-in","true"),M(t)}):M(t)}},addToCall(){void 0!==window.orientation&&navigator.share?navigator.share({title:"Invite Participant",url:location.href}).then(()=>{console.log("Successful share")}).catch(e=>{console.log("Error sharing",e)}):function(){const e=".add-to-call-modal";Modal.show(e).then(()=>new Promise(t=>{const o=document.querySelector(e+" button");o&&o.addEventListener("click",(function n(i){i.preventDefault(),o.removeEventListener("click",n),"copyInviteLinkBtn"===o.id?function(e){const t=document.getElementById("copyInviteLinkBtn"),o=document.getElementById("current-url");o&&o.textContent&&navigator.clipboard.writeText(o.textContent.trim()).then(()=>{if("Copied!"!==t.innerText){const o=t.innerText;t.innerText="Copied!",setTimeout(()=>{Modal.hide(e),t.innerText=o},2e3)}})}(e):Modal.hide(e),t()}))}))}()},togglePublisherAudio(e){const t=e.detail.hasAudio;o.isPublisherReady&&o.publisherHas("audio")===t||o.togglePublisherAudio(t)},togglePublisherVideo(e){const t=e.detail.hasVideo;o.isPublisherReady&&o.publisherHas("video")===t||o.togglePublisherVideo(t)},setRoomLockState(e){const t=e.detail,n={userName:p,token:w,state:t,roomURI:b};Request.sendLockingOperation(n).then(()=>{return e=t,void o.sendSignal("roomLocked",{status:e});var e})}},N=e=>{o.isPublisherReady&&P.buttonClick({detail:{streamId:"publisher",name:"audio",disableAll:!0,status:e}})},D=(e,t,o)=>{let n=e.stream||e.target.stream;if(!n)return;const i=n.streamId;n=R[i];const s=n?n.buttons[t]:E[t];s.enabled=!!o,Utils.sendEvent("roomController:"+t,{id:i,reason:e.reason,enabled:s.enabled})};const L={videoDisabled(e){"subscribeToVideo"===e.reason&&D(e,"video"),j(e.target.stream)},videoEnabled(e){"subscribeToVideo"===e.reason&&D(e,"video",!0),j(e.target.stream)},disconnected(e){Utils.sendEvent("roomController:disconnected",{id:e.target.stream.streamId})},connected(e){Utils.sendEvent("roomController:connected",{id:e.target.stream.streamId})}};let O={connectionCreated(){RoomView.participantsNumber=++i},connectionDestroyed(){RoomView.participantsNumber=--i},sessionConnected(){Utils.sendEvent("roomController:sessionConnected")},sessionDisconnected(){i=0,Utils.sendEvent("roomController:sessionDisconnected"),R={}},streamCreated(e){m.then(()=>{const n=e.stream,i=n.videoType||"noVideo";let a;try{a=JSON.parse(n.connection.data)}catch(m){a={}}n.isSip=!!a.sip,n.name||(n.name=a.name||"");const l=n.streamId;n.phoneNumber=n.isSip&&n.name,n.isSip&&(n.name="Invited Participant"),R[l]={stream:n,buttons:C(i,n.phoneNumber)};const d=y[i],u="camera"===i&&s;h=RoomStatus.get("room");const c=RoomView.createStreamView(l,{name:n.name,type:n.videoType,controlElems:R[l].buttons});d.subscribeToVideo=!u,R[l].subscriberPromise=o.subscribe(e.stream,c,d,{},r).then(t=>{if("screen"===i){r&&Utils.sendEvent("roomController:annotationStarted");const e=t.element.parentElement;return Utils.sendEvent("layoutView:itemSelected",{item:e}),t}return Object.keys(L).forEach(e=>{t.on(e,L[e])}),u&&U(l,"video",!0),new ResizeSensor(c,()=>{const e={width:c.clientWidth,height:c.clientHeight};o.setPreferredResolution(t,null,e,null,null)}),j(e.stream),t},e=>{t.error("Error susbscribing new participant. "+e.message)})})},streamDestroyed(e){const t=e.stream;"screen"===t.videoType&&Utils.sendEvent("roomController:annotationEnded"),RoomView.deleteStreamView(t.streamId),R[t.streamId]=null},streamPropertyChanged(e){o.publisherId===e.stream.id&&("hasVideo"===e.changedProperty?(e.reason="publishVideo",D(e,"video",e.newValue)):"hasAudio"===e.changedProperty&&(e.reason="publishAudio",D(e,"audio",e.newValue)))},archiveStarted(e){Utils.sendEvent("archiving",{status:"started",id:e.id})},archiveStopped(){Utils.sendEvent("archiving",{status:"stopped"})},"signal:roomLocked":function(e){const t=JSON.parse(e.data).status;Utils.sendEvent("roomController:roomLocked",t)},"signal:muteAll":function(e){const t=JSON.parse(e.data),n=t.status;if(t.onlyChangeSwitch)return;const i=(e=>{h.roomMuted===e&&N(e)}).bind(void 0,n);o.isMyself(e.from)||(h.roomMuted=n,n?(N(n),Utils.sendEvent("roomController:roomMuted",{isJoining:!1})):RoomView.showConfirmChangeMicStatus(n).then(i))},"signal:archives":function(e){Utils.sendEvent("roomController:archiveUpdates",e)}};function T(){if(!e.RoomController)throw new Error("Room Controller is not defined. Missing script tag?");const t=document.location.pathname.split("/");if(!t||t.length<2)throw new Error("Invalid path");let n="",i="";const s=t.length;s>0&&(i=t[s-1]),n=Utils.decodeStr(i);const r=Utils.parseSearch(document.location.search),l=window.userName||r.getFirstValue("userName");return g=r.getFirstValue("resolutionAlgorithm"),v=r.getFirstValue("debugPreferredResolution"),a=void 0!==r.getFirstValue("enableHangoutScroll"),PrecallController.showCallSettingsPrompt(n,l,o).then(e=>(e.roomURI=i,RoomView.showRoom(),RoomView.roomURI=i,f.publishAudio=e.publisherOptions.publishAudio,f.publishVideo=e.publisherOptions.publishVideo,f.audioSource=e.publisherOptions.audioSource,f.videoSource=e.publisherOptions.videoSource,e))}function H(e){return Request.getRoomInfo(e).then(o=>{if(!(o&&o.token&&o.sessionId&&o.apiKey&&o.username))throw t.error("Error getRoomParams [",o,"] without correct response"),new Error("Error getting room parameters");return o.roomURI=e.roomURI,o.publishAudio=e.publishAudio,o.publishVideo=e.publishVideo,r=o.enableAnnotation,l=o.enableArchiveManager,d=o.enableSip,u=o.requireGoogleAuth,o})}const x=["/js/components/htmlElems.js","/js/helpers/resolutionAlgorithms.js","/js/helpers/opentok-network-test.js","/js/itemsHandler.js","/js/layoutView.js","/js/layouts.js","/js/layoutManager.js","/js/roomView.js","/js/roomStatus.js","/js/min/chatController.min.js","/js/min/recordingsController.min.js","/js/min/precallController.min.js","/js/layoutMenuController.js","/js/min/screenShareController.min.js","/js/min/feedbackController.min.js","/js/googleAuth.js","/js/min/phoneNumberController.min.js","/js/vendor/ResizeSensor.js"],F={init:()=>{LazyLoader.load(x).then(()=>(Utils.addEventsHandlers("roomView:",P,e),Utils.addEventsHandlers("roomStatus:",k,e),Utils.addEventsHandlers("precallView:",{submit(){}}),PrecallController.init())).then(()=>LazyLoader.load("/js/helpers/OTHelper.js")).then(()=>{o=new OTHelper({}),e.otHelper=o}).then(T).then(H).then(t=>{let o=Promise.resolve();return r&&(e.OTKAnalytics=e.OTKAnalytics||(()=>({addSessionInfo(){},logEvent(e,t){console.log(e,t)}})),o=LazyLoader.load(["https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js","/js/vendor/opentok-annotation.js"])),o.then(()=>t)}).then(e=>{RoomView.init(a,l,d),RecordingsController.init(l,e.archives),b=e.roomURI,p=e.username?e.username.substring(0,1e3):"",p=Utils.htmlEscape(p.substring(0,25)),w=e.token;const s={apiKey:e.apiKey,sessionId:e.sessionId,token:e.token},m=o.connect.bind(o,s);RoomView.participantsNumber=0,O=RoomStatus.init(O,{room:h}),d&&u&&GoogleAuth.init(e.googleId,e.googleHostedDomain,e=>{c=e,c.isSignedIn.get()&&document.body.data("google-signed-in","true")}),ChatController.init(p,O).then(m).then(LayoutMenuController.init).then(()=>new Promise(e=>maxUsersPerRoom?setTimeout(()=>{i>maxUsersPerRoom?Utils.sendEvent("roomController:meetingFullError"):e()},500):e())).then(()=>{const e=RoomView.createStreamView("publisher",{name:p,type:"publisher"});return h.roomMuted&&(D({stream:{streamId:"Publisher"},reason:"publishAudio"},"audio",!1),f.publishAudio=!1),f.name=p,o.publish(e,f,{}).then(()=>{n(),RoomView.showPublisherButtons(f)}).catch(e=>{"OT_CHROME_MICROPHONE_ACQUISITION_ERROR"===e.error.name&&(Utils.sendEvent("roomController:chromePublisherError"),o.disconnect())})}).then(()=>{ScreenShareController.init(p,e.chromeExtId,o,r),FeedbackController.init(o,e.reportIssueLevel),PhoneNumberController.init(),Utils.sendEvent("roomController:controllersReady")}).catch(e=>{t.error("Error Connecting to room. "+e.message)})})}};e.RoomController=F})(this);
 //# sourceMappingURL= roomController.min.js.map