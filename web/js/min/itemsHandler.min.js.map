{"version":3,"sources":["web/js/itemsHandler.js"],"names":["global","Handler","container","items","forEach","name","addEventListener","this","window","setVideoDisabled","item","disabled","data","prototype","[object Object]","evt","type","elemClicked","target","HTMLElems","isAction","Utils","sendEvent","streamId","streamType","detail","id","action","replace","setEnabled","querySelector","enabled","classList","contains","ItemsHandler","init"],"mappings":"AAAC,CAACA,IACA,MAAMC,EAAU,SAAUC,EAAWC,GACnC,CAAC,QAAS,YAAYC,SAAQ,SAAUC,GACtCH,EAAUI,iBAAiBD,EAAME,QAChCA,MACY,CAAC,uBAAwB,uBAAwB,+BAC9D,8BAA+B,8BAC/B,4BACKH,SAAQ,SAAUC,GACvBG,OAAOF,iBAAiBD,EAAME,QAC7BA,MACHA,KAAKJ,MAAQA,GAGTM,EAAmB,CAACC,EAAMC,KAC9BD,GAAQA,EAAKE,KAAK,gBAAiBD,IAGrCV,EAAQY,UAAY,CAClBC,YAAYC,GACV,OAAQA,EAAIC,MACV,IAAK,QAAS,CACZ,MAAMC,EAAcF,EAAIG,OACxB,IAAMC,UAAUC,SAASH,GACvB,OAEFI,MAAMC,UAAUL,EAAYL,KAAK,aAAc,CAC7CW,SAAUN,EAAYL,KAAK,YAC3BP,KAAMY,EAAYL,KAAK,UACvBY,WAAYP,EAAYL,KAAK,gBAE/B,MAEF,IAAK,uBACL,IAAK,uBAAwB,CAC3B,MAAMa,EAASV,EAAIU,OACnB,IAAIf,EAAOH,KAAKJ,MAAMsB,EAAOC,IAE7B,IAAKhB,EACH,OAGF,MAAMiB,EAASZ,EAAIC,KAAKY,QAAQ,kBAAmB,IACnDT,UAAUU,WAAWnB,EAAKoB,cAAc,IAAIH,YAAkBF,EAAOM,SAC1D,UAAXJ,GAAsBlB,EAAiBC,GAAOe,EAAOM,SACrD,MAEF,IAAK,+BACL,IAAK,8BACHtB,EAAiBF,KAAKJ,MAAMY,EAAIU,OAAOC,IAAkB,iCAAbX,EAAIC,MAChD,MAEF,IAAK,2BACL,IAAK,8BACH,IAAIN,EAAOH,KAAKJ,MAAMY,EAAIU,OAAOC,IACjChB,GAAQA,EAAKE,KAAK,eAA6B,gCAAbG,EAAIC,MACtC,MAEF,IAAK,WAAY,CACf,MAAME,EAASH,EAAIG,OAEfA,EAAOc,UAAUC,SAAS,kBAC5BZ,MAAMC,UAAU,0BAA2B,CACzCZ,KAAMH,KAAKJ,MAAMe,EAAON,KAAK,SAGjC,UASRZ,EAAOkC,aAAe,CACpBC,KALF,SAAcjC,EAAWC,GACvB,OAAO,IAAIF,EAAQC,EAAWC,MAxEjC,CA8EEI","sourcesContent":["!(global => {\n  const Handler = function (container, items) {\n    ['click', 'dblclick'].forEach(function (name) {\n      container.addEventListener(name, this);\n    }, this);\n    const events = ['roomController:video', 'roomController:audio', 'roomController:videoDisabled',\n      'roomController:videoEnabled', 'roomController:disconnected',\n      'roomController:connected'];\n    events.forEach(function (name) {\n      window.addEventListener(name, this);\n    }, this);\n    this.items = items;\n  };\n\n  const setVideoDisabled = (item, disabled) => {\n    item && item.data('videoDisabled', disabled);\n  };\n\n  Handler.prototype = {\n    handleEvent(evt) {\n      switch (evt.type) {\n        case 'click': {\n          const elemClicked = evt.target;\n          if (!(HTMLElems.isAction(elemClicked))) {\n            return;\n          }\n          Utils.sendEvent(elemClicked.data('eventName'), {\n            streamId: elemClicked.data('streamId'),\n            name: elemClicked.data('action'),\n            streamType: elemClicked.data('streamType')\n          });\n          break;\n        }\n        case 'roomController:video':\n        case 'roomController:audio': {\n          const detail = evt.detail;\n          let item = this.items[detail.id];\n\n          if (!item) {\n            return;\n          }\n\n          const action = evt.type.replace('roomController:', '');\n          HTMLElems.setEnabled(item.querySelector(`.${action}-action`), detail.enabled);\n          action === 'video' && setVideoDisabled(item, !detail.enabled);\n          break;\n        }\n        case 'roomController:videoDisabled':\n        case 'roomController:videoEnabled':\n          setVideoDisabled(this.items[evt.detail.id], evt.type === 'roomController:videoDisabled');\n          break;\n\n        case 'roomController:connected':\n        case 'roomController:disconnected':\n          var item = this.items[evt.detail.id]; // eslint-disable-line no-redeclare\n          item && item.data('disconnected', evt.type === 'roomController:disconnected');\n          break;\n\n        case 'dblclick': {\n          const target = evt.target;\n\n          if (target.classList.contains('dblclick_area')) {\n            Utils.sendEvent('layoutView:itemSelected', {\n              item: this.items[target.data('id')]\n            });\n          }\n          break;\n        }\n      }\n    }\n  };\n  function init(container, items) {\n    return new Handler(container, items);\n  }\n\n  global.ItemsHandler = {\n    init\n  };\n})(this);\n"]}