{"version":3,"sources":["web/js/recordingsController.js"],"names":["exports","model","handlers","[object Object]","data","selector","Modal","show","document","querySelector","textContent","username","then","Promise","ui","addEventListener","onClicked","evt","classList","target","stopImmediatePropagation","preventDefault","contains","previousStatus","status","Request","deleteArchive","id","Utils","sendEvent","catch","onDeleteArchive","removeEventListener","hide","addListeners","handler","detail","action","RecordingsController","init","enableArchiveManager","existingArchives","dependenciesLoaded","LazyLoader","dependencyLoad","ArchivesEventsListener","resolve","aModel","archives","RecordingsView","this"],"mappings":"AAEC,CAACA,IACA,IAAIC,EAAQ,KAsCZ,MAAMC,EAAW,CACfC,OAAOC,GACL,MAAMC,EAAW,wBAIjB,OAAOC,MAAMC,KAAKF,GAHlB,WACEG,SAASC,cAAiBJ,EAAH,cAAyBK,YAAcN,EAAKO,YAE1BC,KAAK,IACvC,IAAIC,QAAQ,KACjB,MAAMC,EAAKN,SAASC,cAAcJ,GAClCS,EAAGC,iBAAiB,SAAS,SAASC,EAAUC,GAC9C,MAAMC,EAAYD,EAAIE,OAAOD,UAM7B,GALAD,EAAIG,2BACJH,EAAII,iBAEHH,EAAUI,SAAS,mBA3B9B,SAAyBlB,GACvB,MAAMmB,EAAiBnB,EAAKoB,OAC5BpB,EAAKoB,OAAS,WACdC,QAAQC,cAActB,EAAKuB,IACxBf,KAAK,KACJgB,MAAMC,UAAU,qCAAsC,CAAEF,GAAIvB,EAAKuB,OAElEG,MAAM,KAEL1B,EAAKoB,OAASD,IAkBgCQ,CAAgB3B,GAEtDc,EAAUI,SAAS,OAErB,OADAR,EAAGkB,oBAAoB,QAAShB,GACzBV,MAAM2B,KAAK5B,WAQ9B,IAAI6B,EAAe,KACjBlC,EAAQe,iBAAiB,UAAWE,IAClC,MAAMkB,EAAUjC,EAASe,EAAImB,OAAOC,QACpCF,GAAWA,EAAQlB,EAAImB,WAI3BpC,EAAQsC,qBAAuB,CAC7BC,KAtEF,SAAcC,EAAsBC,GAClC,IAAIC,EAaJ,OAXEA,EADEF,EACmBG,WAAWC,eAAe,CAC7C,uCACA,kCACChC,KAAK,IACCiC,uBACJN,QAGgB1B,QAAQiC,UAGxBJ,EAAmB9B,KAAKmC,IAC7B9C,EAAQ8C,EACR9C,EAAM+C,SAAWP,EACjBb,MAAMC,UAAU,yBAA0B,KAAM7B,GAChDkC,IACAa,GAAUE,eAAeV,KAAKtC,MAoDhCA,YACE,OAAOA,KA3EZ,CA8EEiD","sourcesContent":["/* global Modal, ArchivesEventsListener, RecordingsView */\n\n!(exports => {\n  let model = null;\n\n  function init(enableArchiveManager, existingArchives) {\n    let dependenciesLoaded;\n    if (enableArchiveManager) {\n      dependenciesLoaded = LazyLoader.dependencyLoad([\n        '/js/models/archivesEventsListener.js',\n        '/js/min/recordingsView.min.js'\n      ]).then(() => {\n        return ArchivesEventsListener\n          .init();\n      });\n    } else {\n      dependenciesLoaded = Promise.resolve();\n    }\n\n    return dependenciesLoaded.then(aModel => {\n      model = aModel;\n      model.archives = existingArchives;\n      Utils.sendEvent('recordings-model-ready', null, exports);\n      addListeners();\n      aModel && RecordingsView.init(model);\n    });\n  }\n\n  function onDeleteArchive(data) {\n    const previousStatus = data.status;\n    data.status = 'deleting';\n    Request.deleteArchive(data.id)\n      .then(() => {\n        Utils.sendEvent('RecordingsController:deleteArchive', { id: data.id });\n      })\n      .catch(() => {\n        // Archived couldn't be deleted from server...\n        data.status = previousStatus;\n      });\n  }\n\n  const handlers = {\n    delete(data) {\n      const selector = '.archive-delete-modal';\n      function loadModalText() {\n        document.querySelector(`${selector} .username`).textContent = data.username;\n      }\n      return Modal.show(selector, loadModalText).then(() => {\n        return new Promise(() => {\n          const ui = document.querySelector(selector);\n          ui.addEventListener('click', function onClicked(evt) { // eslint-disable-line consistent-return\n            const classList = evt.target.classList;\n            evt.stopImmediatePropagation();\n            evt.preventDefault();\n\n            (classList.contains('delete-archive')) && onDeleteArchive(data);\n\n            if (classList.contains('btn')) {\n              ui.removeEventListener('click', onClicked);\n              return Modal.hide(selector);\n            }\n          });\n        });\n      });\n    }\n  };\n\n  var addListeners = () => {\n    exports.addEventListener('archive', evt => {\n      const handler = handlers[evt.detail.action];\n      handler && handler(evt.detail);\n    });\n  };\n\n  exports.RecordingsController = {\n    init,\n    get model() {\n      return model;\n    }\n  };\n})(this);\n"]}